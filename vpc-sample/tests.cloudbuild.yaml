steps:

- id: Deploy Restricted Function
  name: 'gcr.io/cloud-builders/gcloud'
  args:
  - functions
  - deploy
  - restricted-${SHORT_SHA}
  - --runtime=python38
  - --trigger-http
  - --no-allow-unauthenticated
  - --ingress-settings=internal-only
  - --entry-point=hello_world

- id: 'Build Allow Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  dir: '${_SAMPLE_DIR}'
  args: ['build', '-t', 'gcr.io/${PROJECT_ID}/${_SERVICE}:${SHORT_SHA}', '.'] # Tag docker image with git commit sha

- id: 'Push Container Image'
  name: 'gcr.io/cloud-builders/docker:latest'
  args: ['push', 'gcr.io/${PROJECT_ID}/${_SERVICE}:${SHORT_SHA}']

- id: 'Deploy to Cloud Run'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: /bin/bash
  args:
  - '-c'
  - | # Cloud Run Service name must be less than 63 characters
    cat /dev/urandom | LC_CTYPE=C tr -dc 'a-z0-9' | head -c 15 > _short_id # Generate a random 15 character alphanumeric string (lowercase only)
    gcloud alpha run deploy ${_SERVICE}-$(cat _short_id) \
      --image gcr.io/${PROJECT_ID}/${_SERVICE}:${SHORT_SHA} \
      --no-allow-unauthenticated \
      --platform managed
      --set-env-vars=URL=https://${_SERVICE_REGION}-$PROJECT_ID.cloudfunctions.net/restricted-${SHORT_SHA}
      --vpc-egress=all
      --vpc-connector=samples-connector

- id: 'Get Cloud Run URL'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -e
    . /workspace/testing/cloudbuild-templates/common.sh
    echo $(get_url) > _service_url
    echo "Cloud Run URL for ${_SERVICE}-$(cat _short_id) is $(cat _service_url)"
    echo $(get_idtoken) > _id_token
  env:
    # Make substitutions available in shell script.
    - "_SECRET_NAME=${_SECRET_NAME}"
    - "_RUNNER_IDENTITY=${_RUNNER_IDENTITY}"
    - "_SERVICE=${_SERVICE}"

# This does not seem like expected behavior. For example:

- id: 'Integration Test 1: Access to Restricted Function is blocked outside network'
  # TODO: Update the following image name, entrypoint, and args to fit your testing needs
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: '/bin/sh'
  args:
  - '-c'
  - |
    set -e
    curl -si --fail --show-error -H "Authorization: Bearer $(cat _id_token)"  https://${_SERVICE_REGION}-$PROJECT_ID.cloudfunctions.net/restricted-${SHORT_SHA}

- id: 'Integration Test 2: Access to Restricted Function is allowed through VPC'
  # TODO: Update the following image name, entrypoint, and args to fit your testing needs
  name: 'gcr.io/cloud-builders/curl'
  entrypoint: '/bin/sh'
  args:
  - '-c'
  - |
    set -e
    curl -si --fail --show-error -H "Authorization: Bearer $(cat _id_token)" "$(cat _service_url)"


- id: 'Teardown'
  name: 'gcr.io/cloud-builders/gcloud:$_CLOUDSDK_VERSION'
  entrypoint: '/bin/bash'
  args:
  - '-c'
  - |
    set -x
    gcloud --quiet container images delete gcr.io/${PROJECT_ID}/${_SERVICE}:${SHORT_SHA}
    gcloud --quiet run services delete ${_SERVICE}-$(cat _short_id) --region ${_SERVICE_REGION} --platform managed
    set +x
    echo "View build details in the console: https://console.cloud.google.com/cloud-build/builds/${BUILD_ID}"

options:
  env:
    - "CLOUDSDK_RUN_REGION=${_SERVICE_REGION}"
    - "GOOGLE_CLOUD_PROJECT=${PROJECT_ID}"

# TODO: Update these User-defined substitutions
substitutions:
  _SERVICE: vcp-sample
  _SAMPLE_DIR: vpc-sample
  _SERVICE_REGION: us-central1
  _CLOUDSDK_VERSION: latest